_____________________________________________

history - объект в котором хранится история посещения сайтов.

свойство:
history.length - возвращает длину истории.

методы:
history.back() - Вернуться на предыдущую страницу в истории
history.forward() - перейти на следующую страницу в истории
history.go(5) - перейти на 5 страничек вперед
___________________________________________

Screen - отвечает за монитор пользователя.

Screen.width - ширина монитора
Screen.height - высота монитор
.availWidth - ширина монитора без панели задач
.availHeight - высота монитор без панели задач.
.colorDepth -
___________________________________________

Location - возвращает любую часть адресной строки

Свойства:
location.protocol - вернет часть протокола в виде строки "http:"
location.host - возвращает hostname и port вместе
location.hostname - возвращает имя хоста или домена
location.port - возвращает номер порта если он указан
location.pathname - возвращает полный адрес без учета GET параметров
location.search - Возвращает поисковый запрос.
location.hash - Возвращает хеш
location.href - возвращает все что есть в адресной строке.

Методы:
location.reload() - перезагрузить страницу
location.reload(true) - принудительно перезапросит страницу с сервера, а не из кеша

location.assign("http://ya.ru") - получив адрес в качестве параметра загружает страницу и добавляет в историю страницу
location.replace("http://ya.ru") - получив адрес в качестве параметра загружает страницу, заменяет предыдущую страницу
на текущую в истории history
___________________________________________

Document - основной объект

Свойства
 lastModified
 title
 domain

Методы
 open()
 write(string, [string[, …]]) - запись в html дерево
 close()
___________________________________________

Window
======

Диалоговые окна:

alert(сообщение)            //alert выводит на экран окно с сообщением и приостанавливает
                            выполнение скрипта, пока пользователь не нажмёт «ОК».
                            Окно сообщения, которое выводится, является модальным окном.
                            Слово «модальное» означает, что посетитель не может взаимодействовать
                            со страницей, нажимать другие кнопки и т.п., пока не разберётся с окном.
                            В данном случае – пока не нажмёт на «OK».

alert( "Привет" );
_____________________________________________

prompt();

Функция prompt принимает два аргумента:

result = prompt(title, default);        //Она выводит модальное окно с заголовком title,
                                        полем для ввода текста, заполненным строкой по умолчанию
                                        default и кнопками OK/CANCEL.

Вызов prompt возвращает то, что ввёл посетитель — строку или специальное значение null, если ввод отменён.

var years = prompt('Сколько вам лет?', 100);
_____________________________________________

confirm

result = confirm(question);             //confirm выводит окно с вопросом question с двумя кнопками: OK и CANCEL.
                                        Результатом будет true при нажатии OK и false – при CANCEL(Esc).

var isAdmin = confirm("Вы - администратор?");
_____________________________________________

#########
# Таймеры
#########

x = setTimeout(code, 1000)  -  Исполняет code с задержкой в 1000 после исполнения всего кода. Выполняется 1 раз
clearTimeout(x) - отмена исполнения тамоцта


x = setInterval(code, 1000) - Тоже что и выше, но исполняется не один раз, а через заданный интервал
clearInterval(x)
_____________________________________________

######################
# Создание нового окна
######################

Методы
window.open('url', 'name', 'params', history) - создание нового окна. Первый параметр урл или путь к файлу.
Второй параметр "Имя", что бы можно потом к нему обращаться. Третий параметр - через запятую указываются
параметры открываемого окна (параметры передаются как строка)
window.close() - закруть созданное окно. Или можно обратиться по созданному имени. name.close()
window.focus() - перевод окна в активный режим
window.blur() - переовд в пассивный режим

Свойство
window.closed - было ли закрыто окно. возвразает true либо false
window.opener - ссылка на то окно, которое открыло новое.
_____________________________________________

Параметры  окрываемого окна
___________________________

width (число)  -  ширина
height (число)  -  высота
left (число)  -  смещение создаваемого окна относительно верхнего угла экрана
top (число)  -  смещение создаваемого окна относительно верхнего угла экрана
location (1|0 или yes|no)  -  Разрешает или запрещает показывать адресную строку (игнорируется браузерами).
menubar (1|0 или yes|no)  -  показывать в IE панель меню
scrollbars (1|0 или yes|no)  - показывать или отключить полосу прокрутки.
toolbar (1|0 или yes|no)  -  вклюсить тулбар (в IE)
status (1|0 или yes|no)  -  Показывать в IE строку состояния
resizable (1|0 или yes|no) -  Позволяет изменять или запретить изменение размера окна.
_____________________________________________

Методы манипуляции окнами
___________________________

window.moveTo(x, y) - перемещает окно в точку с координатами x, y.
window.moveBy(x, y) - передвигать окно на x, y  относительно текущей позиции
window.resizeTo(x, y) - изменить размер окна до x, y.
window.resizeBy(x, y)  - изменить размер окна до x, y относительно текущего размера
window.scrollTo(x, y)  - скролл
window.scrollBy(x, y)  -  скролл
_____________________________________________

############
# Фрейм
############

<iframe name="top" src="top.html"></iframe>
<iframe name="bottom" src="bottom.html"></iframe>

frames[0] //как к элементу массива
frames['top'] //как к свойству объекта
frames.top //как к свойству объекта
_____________________________________________

Отношение между окнами
______________________

window - это iframe
self
parent - обращение к родителю iframe
top - обращение к самому главному окну. В случа если множество вложенных iframe
name


