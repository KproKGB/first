GIT NOTES
______________________
______________________

Настройка параметров пользователя

Нужно настроить параметры для истории и удобства
$ git config --global user.name "Name"
$ git config --global user.email "email@email.com"
$ git config --global color.ui true
________________________________________

Начало работы с локальным репозиторием
Для инициализации локального репозитория необходимо выполнить:
$ git clone github.com:<repo-name> <path>
________________________________________

git remote      //Узнать об именах удаленных репозиториев.
git remote -v
________________________________________

git init        //Создание репозитория в текущем каталоге
________________________________________

git status      //Проверка текущего состояния репозитория
________________________________________

git add <file>          //Добавление файла в коммит
git commit -m ""        //Создаем коммит. В "" пишется сообщение коммита
git commit -a -m ""     //Коммит всех изменений в репозитории
________________________________________

git log        //Получение списка произведенных изменений.
git log -p      //Подробный список произведенных изменений
git log -p  <file>    //Подробный список произведенных изменений в файле
________________________________________

Алиас hist      // отсортированный log

git config --global alias.hist 'log --pretty=format:"%h %ad | %s%d │ [%an]" --graph --date=short'
________________________________________

git push                    //Отправка коммита на удаленный сервер
git push origin master      //Отпркавка коммита ветки master на удаленный сервер origin
________________________________________

Допустим, вы сделали commit в git, но поняли, что он недостаточно хорош. В таком случае можно продолжить правки,
а при следующем коммите набрать:

    git commit -a --amend

Ключ --amend (улучшить, в переводе с английского) позволяет добавить к последнему коммиту новые изменения.
________________________________________

Если вы сделали commit в git, но поняли, что он достаточно плох, то можно сделать и так:

    git reset --soft HEAD^

Эта команда отменит последний коммит (но не изменения, которые вы внесли, они сохранятся).
________________________________________

Если последний коммит отвратителен, то можно вообще его удалить:

    git reset --hard HEAD^

________________________________________

Все это работает, если вы не опубликовали свои изменения. В случае, если вы их опубликовали, то не остается ничего
 другого, как сделать коммит, который отменяет какой-то коммит:

    git revert commit-sha1

Ну, а потом опубликовать поскорее его командой git push.
________________________________________

git diff HEAD <file>        //Просмотр подробной информации об изменении файла
________________________________________

git checkout --theirs <file>        //переключение на спрятанную stash-ем версию файла

git checkout --ours <file>          //возвращение на рабочуюю версию файла
_______________________________________